[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html",
    "href": "posts/quarto-blog/quarto-blog.html",
    "title": "R Quarto로 만드는 블로그",
    "section": "",
    "text": "Artwork by Allison Horst"
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#배경",
    "href": "posts/quarto-blog/quarto-blog.html#배경",
    "title": "R Quarto로 만드는 블로그",
    "section": "배경",
    "text": "배경\n제가 논문을 blogdown을 포함하는 bookdown으로 쓰게 된 건, R을 기반으로 한 데이터 분석 결과를 매번 업데이트 하는 과정에서 자잘한 변경을 모두 트래킹 하기 어려웠기 때문입니다. 재현 가능한 연구(reproducible research) 를 위해서라도 R로 논문을 쓰는 게 필요했고, 당시 블로그를 시작할까 도전하면서 며칠을 낑낑 댔던 기억이 나네요.\n이후 등장한 distill은 블로그에 최적화된 간결한 기능을 사용자 친화적인 함수로 제공하여 훨씬 간편해졌어요. distill은 인용, 각주 등이 잘 구현되어 있다는 점, 그리고 css를 잘 몰라도 기본적인 구성은 아주 쉽게 구현할 수 있다는 강점을 갖고 있습니다.\nDistill의 기능을 대부분 포괄하면서 가장 최근에 나온 Quarto Blog 툴은 자바스크립트(JS) 기반 부트스트랩5을 탑재하고 있어 개인화 작업이 손 쉬워 졌습니다."
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#r로-블로그-만드는-3가지-방법",
    "href": "posts/quarto-blog/quarto-blog.html#r로-블로그-만드는-3가지-방법",
    "title": "R Quarto로 만드는 블로그",
    "section": "R로 블로그 만드는 3가지 방법",
    "text": "R로 블로그 만드는 3가지 방법\n\nblogdown (2017 ~ ): R로 작성하는 html 기초 문법 제공\n\nbookdown 패키지의 서브 버전으로 기본 문법을 이해하면 다른 패키지나 시스템 이해도가 크게 높아집니다.\n\n온라인 ebook은 무료로 제공 되고 있습니다.\n\n패키지 저자 Yihui Xie의 공식 가이드북을 추천합니다.\n\ndistill (2018 ~ ): 블로그에 최적화된 레이아웃 제공\n\n과학 블로그, 기술 블로그에 최적화된 웹출판 도구로 패발된 패키지 입니다.\n\n수학식, 인용, 각주 등을 손쉽게 사용할 수 있도록 편의성을 제공합니다.\n\n각종 편의 기능을 제공하는 함수로 블로그 포스팅을 쉽고 빠르게 할 수 있어요.\n\nquarto 블로그 시스템에 distill을 차용하고 있기 때문에 레퍼런스로 활용할 만 합니다.\n\n공식 홈페이지는 여기 참고하세요.\n\nquarto (2022 ~ ): 패키지가 아닌 문서 작성 도구 distill 기능을 대부분 계승합니다.\n\nQuarto는 Posit에서 공식 개발, 확장 중인 시스템으로 빠르게 기능이 확장 되고 있습니다.\nR 생태계를 파이썬과 연결하려는 시스템 입니다.\nRStudio 외에 쥬피터노트북, VS Code에서도 사용할 수 있어요."
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#quarto-장점",
    "href": "posts/quarto-blog/quarto-blog.html#quarto-장점",
    "title": "R Quarto로 만드는 블로그",
    "section": "Quarto 장점",
    "text": "Quarto 장점\n\nR 패키지가 아닌 문서 작성 시스템 입니다.\n\nR 이외 파이썬 언어로도 작성 가능합니다.\n\n블로그, 홈페이지, MS워드, PDF, ePub 등 다양한 문서 작성을 지원합니다.\nQuarto -&gt; Github -&gt; 제3자 퍼블리싱 연계가 쉽습니다."
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#quarto-단점",
    "href": "posts/quarto-blog/quarto-blog.html#quarto-단점",
    "title": "R Quarto로 만드는 블로그",
    "section": "Quarto 단점",
    "text": "Quarto 단점\n\n개인화 하려면 배워야 할 게 많습니다.\n\nR마크다운, yaml, html, css, JS는 기본적으로 이해할 필요가 있어요.\ngit에 대한 기본 이해도 필요해요.\nNetlify 같은 호스팅 서비스도 필요해요.\n\n패키지가 아니라서 클릭 한 번으로 블로그 포스팅 템플릿이 자동 생성되지 않습니다.\n\n블로그 포스팅 마다 폴더를 만들고, 그 안에 Rmd(R마크다운) 파일을 개별 생성해야 합니다."
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#어떻게-시작하나요",
    "href": "posts/quarto-blog/quarto-blog.html#어떻게-시작하나요",
    "title": "R Quarto로 만드는 블로그",
    "section": "어떻게 시작하나요?",
    "text": "어떻게 시작하나요?\n\nQuarto 설치\nPosit 홈페이지에서 사용하는 OS 시스템에 맞는 버전을 다운로드 후 설치 합니다. 2024-02-15 1.4.550 버전이 출시 되었습니다.\n\n\nQuarto Blog 프로젝트 만들기\n가장 쉬운 방법은 RStudio에서 신규 프로젝트를 생성할 때, Quarto Blog를 선택하는 겁니다. 프로젝트에서 자동으로 기본 뼈대 구성에 필요한 폴더들과 파일을 만들어 줍니다. 일단은 개인화는 나중에 생각하고, 해당 템플릿을 활용해서 index.Rmd를 나의 블로그 포스팅으로 수정하기만 해도 블로그를 시작하는 거죠.\n여기까지 얼마나 걸릴까요? 블로그 포스팅 소재만 준비되어 있다면 하루도 안 걸립니다.\n\n\nGithub 연동하기\ngit에 대해 잘 모르거나 github를 써 보지 않았다면 처음에 조금 헤맬 수 있어요. 관련된 포스팅은 다음 기회에 자세히 하기로 하구요, 초보를 위한 usethis 패키지를 활용할께요.\n\n(1) 깃헙 계정 만들기\nGitHub 계정이 없다면 이번 기회에 만듭니다.\n\n\n(2) usethis 패키지 설치\nusethis 패키지를 설치 하고 불러 옵니다.\n\n#install.packages(\"usethis\")\nlibrary(usethis) \n\n\n\n(3) 깃헙 계정과 RStudio 연결\nHappy Git and GibHub for the useR을 참조하시면 왠만한 건 다 해결 될 거에요.\n우리가 참고할 부분은 17 Existing project, Github last입니다.\n\nusethis::use_git()\n\n\n\n(4) 깃 패널 확인\n위 명령을 실행하면 RStudio 우측 상단 Environment가 있는 패널에 ’Git’이라는 패널이 새로 생길 거에요.\n\n\n\nGit 패널이 생기면 성공\n\n\n\n\n(5) 깃헙 연결하는 개인화토큰(PAT) 만들기\n다음 명령을 실행하면 깃헙 내 계정으로 로그인하는 창이 브라우저에 뜹니다. 브라우저에서 로그인 하면 PAT 만드는 페이지로 바로 접속 됩니다.\n\ncreate_github_token()\n\nNote 빈 칸에 적당한 이름을 만들어서 저장합니다. 다음 페이지에서 창을 절대 닫지 마시고 생성된 PAT를 복사하세요.\n\n\n\nPAT만드는 깃헙페이지로 연결됩니다\n\n\n다음 코드를 실행해서 시스템에 생성한 PAT를 저장합니다. 저는 이미 PAT가 저장되어 있기 때문에, 다음과 같이 기존 코드를 바꾸냐는 옵션이 있는 점 참고해 주세요.\n\ngitcreds::gitcreds_set()\n\n\n\n\n콘솔에서 옵션을 선택해서 저장\n\n\n\n\n(6) 깃헙에 블로그 레포지토리 생성\n다음 코드를 실행해서 깃헙에 프로젝트 이름으로 새로운 레포지토리를 생성합니다.\n\nuse_github() \n\n깃헙 홈페이지에서 새로 만들어진 레포지토리를 확인 합니다. 아직은 비어 있을 거에요.\n\n\n(7) 첫 커밋을 실행\n(4)번에서 본 Git 패널로 다시 갑니다. 아직 git에 연동되지 않은 파일 리스트가 있을 겁니다. 다음과 같이 실행하세요.\n\nDiff 아이콘을 열고, 모두 선택해서(staged)\n\n커밋 메세지를 적어요\n\n나중에 변경 이력 관리하기 위해서 어떤 내용 변경인지 요약한다고 생각하면 됩니다.\n\n\ncommit 버튼 클릭\n\npush 버튼 클릭\n\n간혹 push 버튼이 활성화 되지 않을 경우가 있어요. 그럴 때는 Terminal로 이동해서 직접 git 연동을 시켜 줍니다.\n\ngit push origin main\n\n\n\n(8) 깃헙 홈페이지 확인\n제대로 업로드가 되었는지 깃헙 홈페이지에 레포지토리를 확인하세요."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "R Quarto로 만든 블로그 배포\n\n\n\n\n\n\n\nnews\n\n\nfeatured\n\n\ngit\n\n\nquarto\n\n\n \n\n\n\n\n2024-02-24\n\n\n박세희\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nR Quarto로 만드는 블로그\n\n\n\n\n\n\n\nnews\n\n\nfeatured\n\n\ngit\n\n\nquarto\n\n\n \n\n\n\n\n2024-02-23\n\n\n박세희\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n \n\n\n\n\n2024-02-22\n\n\nHarlow Malloc\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Mindful Analytics",
    "section": "",
    "text": "R | Python | Docker | JS\n네트워크 분석 | 예측 모델링 | 자연어처리(NLP)\n수석데이터분석가/CTO @ 딜리버디 (2022. 9 ~ 현재)\n겸임교수 @ 한국뉴욕주립대 SBU 기술경영학과 (2023. 1 ~ 현재)\n책임연구원/팀장 @ 한국산업기술진흥원 (2006.2 ~ 2022. 9)\n지혜로움 | 미션지향 | 효율추구 | 맛집탐방"
  },
  {
    "objectID": "about.html#박세희bak-seh-hui-ph.d.",
    "href": "about.html#박세희bak-seh-hui-ph.d.",
    "title": "Mindful Analytics",
    "section": "",
    "text": "R | Python | Docker | JS\n네트워크 분석 | 예측 모델링 | 자연어처리(NLP)\n수석데이터분석가/CTO @ 딜리버디 (2022. 9 ~ 현재)\n겸임교수 @ 한국뉴욕주립대 SBU 기술경영학과 (2023. 1 ~ 현재)\n책임연구원/팀장 @ 한국산업기술진흥원 (2006.2 ~ 2022. 9)\n지혜로움 | 미션지향 | 효율추구 | 맛집탐방"
  },
  {
    "objectID": "posts/quarto-blog/quarto-blog.html#사용-소감",
    "href": "posts/quarto-blog/quarto-blog.html#사용-소감",
    "title": "R Quarto로 만드는 블로그",
    "section": "사용 소감",
    "text": "사용 소감\n글이 너무 길어져서… 웹에 배포하는 Netlify 연동은 다음 포스팅에서 다룰께요.\nQuarto 설치 후 첫 블로그 포스팅 까지 딱 하루가 걸렸어요. 물론 저는 R 사용에 능숙하고 기존에 blogdown, distill 썼던 경험이 있어서 수월 했을 수도 있다고 생각합니다. 그럼에도 Quarto가 워낙 사용하기 쉽기 때문에 개발자가 아니어도 누구나 R을 활용한 블로그를 개설할 수 있습니다. Wordpress 블로그 개설이 너무 어려웠다면, Quarto를 찬찬히 따라해 보는 것 추천합니다. 여러분도 할 수 있어요."
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html",
    "href": "posts/netlify-deployment/netlify-deployment.html",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "",
    "text": "Artwork by Allison Horst"
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#먼저-참고하면-좋은-글",
    "href": "posts/netlify-deployment/netlify-deployment.html#먼저-참고하면-좋은-글",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "먼저 참고하면 좋은 글",
    "text": "먼저 참고하면 좋은 글\nR Quarto로 블로그 만들기\n\nQuarto로 하루 만에 블로그 만드는 방법이 궁금하다면?\nGitHub와 Quarto 블로그 프로젝트를 연결하려면?"
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#netlify가-무엇이죠",
    "href": "posts/netlify-deployment/netlify-deployment.html#netlify가-무엇이죠",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "Netlify가 무엇이죠?",
    "text": "Netlify가 무엇이죠?\n정적 웹사이트를 호스팅하고 관리할 수 있는 무료 플랫폼 입니다. R 커뮤니티 뿐만 아니라 기술 블로그를 운영하는 다양한 개발자 커뮤니티에서 인기있는 서비스 입니다.1 Quarto 블로그는 기본적으로 미리 knit을 통해 완성한 html을 서버로 전송하는 방식을 채택합니다. 따라서 웹 호스팅이 간편하고 빠르며 보안성이 높습니다."
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#netlify-쉬운가요",
    "href": "posts/netlify-deployment/netlify-deployment.html#netlify-쉬운가요",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "Netlify 쉬운가요?",
    "text": "Netlify 쉬운가요?\n네!\n다음과 같은 설정 1번만 해 두면, 블로그에 새 글을 추가하거나 변경하는 내용이 자동으로 배포됩니다. 이를 지속적 배포(continuous deployment) 라고 합니다. 이런 기술적 용어나 원리는 몰라도 됩니다. Netlify 서비스가 모든 것을 관리해 주니까요.\n여러분이 할 일은 Quarto로 만든 블로그 작성 프로젝트를 깃헙에 연동한 뒤, Netlify에 해당 깃헙을 연결하는 설정 1번만 하는 것이에요.\n해외 서비스라서 모든 기능이 영어로만 제공된다는 것이 조금 불편할 수 있지만, 구글 번역기 등을 활용해서 충분히"
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#깃헙---netlify-연결하기",
    "href": "posts/netlify-deployment/netlify-deployment.html#깃헙---netlify-연결하기",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "깃헙 - Netlify 연결하기",
    "text": "깃헙 - Netlify 연결하기\nQuarto 블로그 프로젝트를 깃헙에 연결하는 방법은 이 블로그 포스팅 도입부에 소개한 R Quarto로 블로그 만들기 글을 참고해 주세요. 여기서는 깃헙 연동에 성공한 이후 Netlify 연결 방법에 관해 소개합니다.\n\n(1) Netlify 계정 만들기\nNetlify 바로가기\n처음 시작하는 계정은 무료 입니다. 추후 블로그 방문자 트래픽이 커지면 비용이 발생할 수 있지만, 대부분의 개인 블로그 정도는 무료로 운영 가능합니다. 무료 계정 허용 용량 이상 트래픽은 로그인 후 제공하는 대시보드 형태 화면에서 확인 가능 합니다.\n신규 계정 만들 때는 깃헙 계정을 연동하는 방식을 추천 합니다. 어차피 우리가 배포하려는 서비스가 깃헙에 등록되어 있기 때문에 다른 이메일 주소로 가입하더라도 깃헙 계정과 연동을 해야 하긴 합니다.\n\n\n(2) 깃헙 레포지토리 불러오기\n\n로그인 후 보이는 화면에서 Add new site 클릭\nImport an existing project 선택\nDeploy with GitHub 선택\n깃헙 계정과 연동 허용\nNetlify에서 배포할 레포지토리를 선택\n\n\n\n\n등록할 깃헙 레포지토리 설정하는 방법\n\n\n\n\n(3) 사이트 이름 지정\n\n기본적으로 xxxx.netlify.app 이라는 홈페이지 주소가 자동 부여됩니다.\nSite name에 내가 원하는 서브 도메인 이름을 영어로 작성하여 사용 가능 여부를 확인 합니다.\n\n이 단계에서 놓쳐도 설정에서 변경할 수 있어요.\n\n\n\n\n\n사이트명 설정하기\n\n\n\n\n(4) (가장 중요) 배포 폴더 지정\n\nBuild settings &gt; Publish directory 에서 _site 라고 입력합니다.\n\n이 옵션은 Quarto 블로그 프로젝트를 생성했다면 공통 적용 입니다.\n\n다른 것은 수정하거나 추가하지 마세요.\nDeploy XXX (배포할 레포지토리 이름) 버튼 클릭하세요\n\n\n\n\n_site 라고 입력하기\n\n\n여기까지 5분 정도 걸리셨나요? 모든 설정이 끝났어요. 진짜로요."
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#이제-블로그-쓰기만-하세요",
    "href": "posts/netlify-deployment/netlify-deployment.html#이제-블로그-쓰기만-하세요",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "이제 블로그 쓰기만 하세요",
    "text": "이제 블로그 쓰기만 하세요\n지금 여러분이 보고 있는 Mindful Analytics 블로그도 바로 Quarto-GitHub-Netlify 조합으로 만들고 배포 하였습니다. 이 연동 설정은 1회만 하면 됩니다. 앞으로는 Quarto로 추가 포스팅 작성 후 GitHub로 커밋 & 푸쉬만 하면 Netlify가 해당 변경 내용을 실시간으로 받아서 웹사이트를 상시 업데이트 해 줍니다. 변경에 대한 배포에 대해 고민할 필요가 없는 것이 Netlify를 쓰는 가장 큰 장점 이에요.\n\n(보너스) 연동 후 새로운 글 배포하는 방법\n\nposts 폴더 안에 새로운 블로그 글을 작성할 폴더를 만듭니다.\n\n작성할 포스트 제목을 나타내는 키워드를 영어로 골라서 폴더명을 쓰세요.\n예를 들어, 제가 작성 중인 이 포스트는 netlify-deployment 폴더 안에 있습니다.\n이 폴더 이름이 블로그 글 주소에 들어가게 됩니다.\n\n새로 만든 폴더 안에 .qmd 파일을 생성하고 블로그 템플릿을 참고하여 새 글을 작성합니다.\n\n추가할 그림이나 데이터는 이 폴더 안에 함께 담아 주면 별도 경로 지정할 필요가 없어요.\n\n글 작성 후 웹 등록하려면 다음 2가지를 꼭 기억하세요.\n\n블로그 .qmd의 yaml 헤더에 draft: false 인지 꼭 확인하세요 (삭제하면 더 좋아요)\n다 작성한 뒤 반드시 Render를 해서 html 파일을 생성합니다. 변경 사항 저장 시 자동 Render 되도록 Render on Save 옵션을 활성화하면 편리합니다.\n_site 폴더 안에 내가 만든 포스팅 폴더가 추가 되었는지 확인하세요\n\n깃헙에 변경된 내용을 커밋 & 푸쉬하는 것 잊지 마세요.\n\n\n여러분도 R로 쓰는 블로그, Quarto-GitHub-Netlify 조합으로 쉽고 빠르게 만들어 나가시길 바랍니다."
  },
  {
    "objectID": "posts/netlify-deployment/netlify-deployment.html#footnotes",
    "href": "posts/netlify-deployment/netlify-deployment.html#footnotes",
    "title": "R Quarto로 만든 블로그 배포",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n정적 웹사이트란 미리 웹 페이지 내용이 생성되어 서버에서 사용자 요청에 따라 생성되거나 처리되는 컨텐츠가 없는 사이트 입니다.↩︎"
  }
]